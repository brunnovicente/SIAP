/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.FachadaControle;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;  
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import persistencia.entidades.Cliente;
import persistencia.entidades.Item;
import persistencia.entidades.Produto;
import persistencia.entidades.Usuario;
import persistencia.entidades.Venda;

/**
 *
 * @author Bruno
 */
public class JanelaVenda extends javax.swing.JDialog {

    private List<Item> itens;
    private Usuario usuario;
    private TelaPrincipal pai;
    private Produto produto;
    private Cliente cliente;
    private Venda venda;
    private double totaloriginal = 0;
    
    public JanelaVenda(java.awt.Frame parent, boolean modal, Usuario usuario) throws Exception {
        super(parent, modal);
        initComponents();
        //CONTROLANDO O BOTÃO FECHAR DA JANELA
//        addWindowListener(  
//                new WindowAdapter()   
//                {  
//                    @Override
//                    public void windowClosing(WindowEvent we) {  
//                        int valor = JOptionPane.showConfirmDialog(null,"Deseja sair do Orçamento? ","ATENÇÃO",JOptionPane.YES_NO_OPTION);
//                        if(valor == JOptionPane.YES_OPTION){
//                            this.dispose();
//                        }
//                    }  
//                }  
//        );
        //FIM DO CONTROLE DO BOTÃO FECHAR DA JANELA
        
        //this.setUndecorated(true);
        
        this.usuario = usuario;
        this.setLocationRelativeTo(null);
        jcodigo.requestFocus();
        this.pai = (TelaPrincipal) parent;
        this.itens = new ArrayList<Item>();
        jvendedor.setText(this.usuario.getNome());

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        jdata.setText(sdf.format(new Date()));

        venda = new Venda();
        venda.setCaixa(FachadaControle.getFachadaControle().getCaixa());
        venda.setVendedor(this.usuario);
        
        jtotal.setText("R$ 0,00");
        produto = new Produto();
        cliente = FachadaControle.getFachadaControle().getCliente(1);
        venda.setCliente(cliente);
        venda.setData(new Date());
        
        jcodigocliente.setText(cliente.getCodigo()+"");
        jcliente.setText(cliente.getNome());
        japelido.setText(cliente.getApelido());
        jradiodin.setSelected(true);
        
        //this.jbutao_nova.setEnabled(false);
        
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        
    }
    
    
    public JanelaVenda(java.awt.Frame parent, boolean modal, Usuario usuario, Venda venda) throws Exception {
        super(parent, modal);
        initComponents();
        
        jbutao_pesquisar_cliente.setEnabled(false);
        jradiodin.setSelected(true);
        this.usuario = usuario;
        this.setLocationRelativeTo(null);
        jcodigo.requestFocus();
        this.pai = (TelaPrincipal) parent;
        this.itens = venda.getItens();
        jvendedor.setText(this.usuario.getNome());

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        jdata.setText(sdf.format(new Date()));

        this.venda = venda;
        this.venda.setVendedor(usuario);
        this.venda.setCaixa(FachadaControle.getFachadaControle().getCaixa());
        this.venda.setData(new Date());
        
        
        jtotal.setText("R$ " + venda.getTotal());
        produto = new Produto();
        cliente = venda.getCliente();
        
        jcodigocliente.setText(venda.getCliente().getCodigo() + "");
        jcliente.setText(venda.getCliente().getNome());
        japelido.setText(venda.getCliente().getApelido());
        
        
        
        //preencher itens
        
        for(Item item: venda.getItens()){
           
            this.mostrarItemTabela(item);
        }
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jdescricao = new javax.swing.JTextField();
        jcodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbutao_pesquisar = new javax.swing.JButton();
        jbutao_adicionar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jquantidade = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabelaitens = new javax.swing.JTable();
        jbutao_excluir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jvendedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jdata = new javax.swing.JTextField();
        jtotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jdesconto = new javax.swing.JTextField();
        jradiodin = new javax.swing.JRadioButton();
        jradiopor = new javax.swing.JRadioButton();
        jButton6 = new javax.swing.JButton();
        jbutao_concluir = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jbutaosalvar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jcodigocliente = new javax.swing.JTextField();
        jcliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jbutao_pesquisar_cliente = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        japelido = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VENDA DE PRODUTOS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Venda"));

        jdescricao.setEditable(false);
        jdescricao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jdescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdescricaoActionPerformed(evt);
            }
        });
        jdescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdescricaoFocusGained(evt);
            }
        });
        jdescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdescricaoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdescricaoKeyReleased(evt);
            }
        });

        jcodigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jcodigo.setToolTipText("");
        jcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcodigoKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("CÓDIGO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("DESCRIÇÃO DO PRODUTO");

        jbutao_pesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisa.png"))); // NOI18N
        jbutao_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutao_pesquisarActionPerformed(evt);
            }
        });

        jbutao_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbutao_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutao_adicionarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("QUANTIDADE");

        jquantidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jquantidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jquantidadeMouseClicked(evt);
            }
        });
        jquantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jquantidadeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jcodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbutao_pesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbutao_adicionar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbutao_pesquisar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jbutao_adicionar))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens da Venda"));

        jtabelaitens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtabelaitens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Quantidade", "Preço Unitário", "Preço Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtabelaitens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtabelaitensKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtabelaitens);
        if (jtabelaitens.getColumnModel().getColumnCount() > 0) {
            jtabelaitens.getColumnModel().getColumn(0).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(1).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(1).setPreferredWidth(300);
            jtabelaitens.getColumnModel().getColumn(2).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(2).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(3).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(3).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(4).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jbutao_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Lixeira2.png"))); // NOI18N
        jbutao_excluir.setText("EXCLUIR");
        jbutao_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutao_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbutao_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbutao_excluir))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Venda"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Vendedor");

        jvendedor.setEditable(false);
        jvendedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Data da Venda");

        jdata.setEditable(false);
        jdata.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jtotal.setEditable(false);
        jtotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtotal.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("TOTAL DA VENDA:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("DESCONTO:");

        jdesconto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jdesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdescontoKeyPressed(evt);
            }
        });

        buttonGroup2.add(jradiodin);
        jradiodin.setText("R$");

        buttonGroup2.add(jradiopor);
        jradiopor.setText("%");

        jButton6.setText("OK");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jdata, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(304, 304, 304)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtotal)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jradiodin)
                        .addGap(18, 18, 18)
                        .addComponent(jradiopor)
                        .addGap(18, 18, 18)
                        .addComponent(jdesconto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jradiodin)
                        .addComponent(jradiopor))
                    .addComponent(jdesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbutao_concluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ok.png"))); // NOI18N
        jbutao_concluir.setText("Concluir - F5");
        jbutao_concluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutao_concluirActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir.png"))); // NOI18N
        jButton5.setText("FECHAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jbutaosalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Salvar.png"))); // NOI18N
        jbutaosalvar.setText("Salvar");
        jbutaosalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutaosalvarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Cliente"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("CÓDIGO");

        jcodigocliente.setEditable(false);
        jcodigocliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jcliente.setEditable(false);
        jcliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("NOME DO CLIENTE");

        jbutao_pesquisar_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisa.png"))); // NOI18N
        jbutao_pesquisar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutao_pesquisar_clienteActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("APELIDO");

        japelido.setEditable(false);
        japelido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jcodigocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(338, 338, 338)
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(japelido, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbutao_pesquisar_cliente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcodigocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbutao_pesquisar_cliente)
                    .addComponent(japelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/AbriPasta.png"))); // NOI18N
        jButton1.setText("Abrir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Novo.png"))); // NOI18N
        jButton2.setText("NOVA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbutaosalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbutao_concluir, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jbutao_concluir)
                            .addComponent(jbutaosalvar)
                            .addComponent(jButton1)))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbutao_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutao_pesquisarActionPerformed
        this.buscarProduto();
    }//GEN-LAST:event_jbutao_pesquisarActionPerformed

    private void jdescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescricaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jquantidade.requestFocus();
            //teste.selectAll();
            jquantidade.selectAll();
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jdescricaoKeyPressed

    private void jbutao_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutao_adicionarActionPerformed
            this.insersaoItem();
    }//GEN-LAST:event_jbutao_adicionarActionPerformed

    private void jbutao_concluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutao_concluirActionPerformed
        try {
            if(this.verificar()){
                if(jcodigo.getText().isEmpty()){
                    if(!venda.getItens().isEmpty()){
                        this.finalizarvenda();
                    }else{
                        JOptionPane.showMessageDialog(null, "Não é possível efetuar vendas sem produtos!");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Não é possível concluir a venda com um produto em aberto!");
                }
            }//Fim do Verificar
        } catch (ParseException ex) {
            Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbutao_concluirActionPerformed

    private void jdescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdescricaoActionPerformed

    }//GEN-LAST:event_jdescricaoActionPerformed

    private void jdescricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdescricaoFocusGained
    }//GEN-LAST:event_jdescricaoFocusGained

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_formKeyPressed

    private void jtabelaitensKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtabelaitensKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            
            jtotal.setText(venda.getTotal() + "");
            removerItem();
        }
    }//GEN-LAST:event_jtabelaitensKeyPressed

    private void jquantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jquantidadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.insersaoItem();
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jquantidadeKeyPressed

    private void jquantidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jquantidadeMouseClicked
        jquantidade.setText("1");
    }//GEN-LAST:event_jquantidadeMouseClicked

    private void jbutao_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutao_excluirActionPerformed
        removerItem();
        jtotal.setText(venda.getTotal() + "");
    }//GEN-LAST:event_jbutao_excluirActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.fechar();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jdescricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescricaoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jdescricaoKeyReleased

    private void jcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcodigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.buscaProdutoPorCodigo();
            
            jquantidade.requestFocus();
            //teste.selectAll();
            jquantidade.selectAll();
            
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        } else if(evt.getKeyCode() == KeyEvent.VK_F2){
            this.buscarCliente();
        }else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jcodigoKeyPressed

    private void jbutaosalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutaosalvarActionPerformed
       
        try {
            if(venda.getCodigo() == 0){
                this.venda = FachadaControle.getFachadaControle().salvarOrcamento(venda);
                JOptionPane.showMessageDialog(null, "Orçamento Salvo com Sucesso!");
                this.setTitle("ORÇAMENTO: "+this.venda.getData());
                //jbutaosalvar.setEnabled(false);
            }else{
                if(venda.getStatus().equals("Orçamento")){
                    this.venda = FachadaControle.getFachadaControle().salvarOrcamento(venda);
                    JOptionPane.showMessageDialog(null, "Orçamento Salvo com Sucesso!");
                }else{
                    FachadaControle.getFachadaControle().gerarRelatorioOrcamento(this.venda);
                }
            }
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Orçamento não pode ser salvo");
        }
    }//GEN-LAST:event_jbutaosalvarActionPerformed

    private void jbutao_pesquisar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutao_pesquisar_clienteActionPerformed
        this.buscarCliente();
        
    }//GEN-LAST:event_jbutao_pesquisar_clienteActionPerformed

    private void jdescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescontoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.descontar();                
        }//Fim do IF da tecla
    }//GEN-LAST:event_jdescontoKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.descontar();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.abrir();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.novaVenda();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private boolean verificar(){
        String texto = "Produtos em falta no Estoque: \n";
        boolean ok = true;
        try{
            
            for (Item item : this.venda.getItens()) {
                int cod = item.getProduto().getCodigo();
                Produto p = FachadaControle.getFachadaControle().getProduto(cod);
                if(p.getEstoqueAtual() < item.getQuantidade()){
                    ok = false;
                    texto += ""+p.getDescricao()+"\n";
                }
            }
            if(!ok){
                JOptionPane.showMessageDialog(null, texto);
            }
        } catch (SQLException ex) {
            Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ok;
    }
    
    private void abrir(){
        JanelaConsultaVendas jcv = new JanelaConsultaVendas(pai, true,this.venda);
        jcv.setVisible(true);
        //Pegando dados do cliente
        jcodigocliente.setText(this.venda.getCliente().getCodigo()+"");
        jcliente.setText(this.venda.getCliente().getNome());
        japelido.setText(this.venda.getCliente().getApelido());
        
        this.ClearTabela(jtabelaitens);
        
              
        for (int i = 0; i < this.venda.getItens().size(); i++) {
            Item item = this.venda.getItens().get(i);
            
            DefaultTableModel modelo = (DefaultTableModel) jtabelaitens.getModel();
            String[] linha = new String[5];
            linha[0] = item.getProduto().getCodigoBarra();
            linha[1] = item.getProduto().getDescricao();
            linha[2] = item.getQuantidade()+"";
            linha[3] = "R$ "+item.getPreco();
            linha[4] = "R$ "+item.getPreco();
            
            modelo.addRow(linha);
        }
        this.setTitle("ORÇAMENTO: "+this.venda.getData());
    }//Fim do abrir
    
    
    
    private void fechar(){
        if(venda.getCodigo() == 0){
            int valor = JOptionPane.showConfirmDialog(null,"Deseja sair do Orçamento? ","ATENÇÃO",JOptionPane.YES_NO_OPTION);
            if(valor == JOptionPane.YES_OPTION){
                this.dispose();
            }
        }else{
            try {
                this.venda = FachadaControle.getFachadaControle().salvarOrcamento(venda);
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void buscarCliente(){
        JanelaConsultaClientesVenda consultacliente = new JanelaConsultaClientesVenda(pai, true,cliente);
        consultacliente.setVisible(true);
        jcodigocliente.setText(cliente.getCodigo()+"");
        jcliente.setText(cliente.getNome());
        japelido.setText(cliente.getApelido());
        venda.setCliente(cliente);
        jcodigo.requestFocus();
    }


    private void buscarProduto() {
        //if(venda.getCodigo() == 0){
            produto = new Produto();
            JanelaConsultaProdutos janelaconsulta = new JanelaConsultaProdutos(this.pai, true, produto);
            janelaconsulta.setVisible(true);
            //JOptionPane.showMessageDialog(null, "Código: "+produto.getCodigoFor());
            if (produto.getCodigo() != 0) {
                if(produto.getEstoqueAtual() > 0){
                    jdescricao.setText(produto.getDescricao());
                    jcodigo.setText(produto.getCodigoproduto());
                    jquantidade.setText("1");
                    jquantidade.requestFocus();
                    jquantidade.select(0, jquantidade.getText().length());
                }else{
                    JOptionPane.showMessageDialog(null, "Não há "+produto.getDescricao()+" em Estoque!");
                }
            }
        //}
    }
    
    private void buscaProdutoPorCodigo(){
        //Produto produto = new Produto();
        try {
            produto = FachadaControle.getFachadaControle().buscaProdutoBarra(jcodigo.getText());
            
            jdescricao.setText(produto.getDescricao());
            jquantidade.setText("1");
            jquantidade.requestFocus();
            jquantidade.select(0, jquantidade.getText().length());
            
        } catch (SQLException ex) {
            Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void finalizarvenda() throws ParseException {
        
        String data = jdata.getText();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date d = df.parse(jdata.getText());
        System.out.println("CÓDIGO ANTES: "+venda.getCodigo());
        venda.setData(d);
        
        venda.setVendedor(usuario);
        
        JanelaConfirmacao confirma = new JanelaConfirmacao(pai, true, venda);
        
        confirma.setVisible(true);
        System.out.println("CÓDIGO DEPOIS: "+venda.getCodigo());
        if(venda.getCodigo() != 0){
            //jbutao_nova.setEnabled(true);
            jbutao_adicionar.setEnabled(false);
            jbutao_concluir.setEnabled(false);
            jbutao_excluir.setEnabled(false);
            jbutao_pesquisar.setEnabled(false);
            jbutao_pesquisar_cliente.setEnabled(false);
        }
        //if(venda == null){ // Só fecha a janela venda se a venda tiver sido realizada
        //    this.dispose();
        //}
        this.novaVenda();
        this.setTitle("VENDA DE PRODUTOS");
    }
    
    private void novaVenda(){
        venda = new Venda();
        venda.setCaixa(FachadaControle.getFachadaControle().getCaixa());
        venda.setVendedor(this.usuario);
        
        jtotal.setText("R$ 0,00");
        produto = new Produto();
        try {
            cliente = FachadaControle.getFachadaControle().getCliente(1);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        venda.setCliente(cliente);
        venda.setData(new Date());
        
        jcodigocliente.setText(cliente.getCodigo()+"");
        jcliente.setText(cliente.getNome());
        japelido.setText(cliente.getApelido());
        jradiodin.setSelected(true);
        
        jbutao_adicionar.setEnabled(true);
        jbutao_concluir.setEnabled(true);
        jbutao_excluir.setEnabled(true);
        jbutao_pesquisar.setEnabled(true);
        jbutao_pesquisar_cliente.setEnabled(true);
        this.ClearTabela(jtabelaitens);
        this.setTitle("VENDA DE PRODUTOS");
    }

    private void ClearTabela(JTable jtabela) {
        DefaultTableModel model = (DefaultTableModel) jtabela.getModel();;
        int tam = model.getRowCount();
        for (int i = 0; i < tam; i++) {
            model.removeRow(0);
        }
    }

    private void removerItem() {
        int valor = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o item?", "EXCLUSÃO", JOptionPane.YES_NO_OPTION);
        if(valor == JOptionPane.YES_OPTION){
            int pos = jtabelaitens.getSelectedRow();

            Item itemRemove = venda.getItens().remove(pos);
            venda.setTotal(venda.getTotal() - itemRemove.getTotal());


            DefaultTableModel model = (DefaultTableModel) jtabelaitens.getModel();
            model.removeRow(pos);
            jtabelaitens.setModel(model);
            jtotal.setText("R$ " +venda.getTotal());
        }
    }
    
    private void insersaoItem(){
            
        Item item = null;
        if(this.produto.getEstoqueAtual() >= Integer.parseInt(jquantidade.getText())){
            try {
                //gerar o item a ser inserido
                item = bindItem();
            } catch (Exception ex) {
                Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());
                return;
            }

            int pos = buscarItemSimilar(item);
            System.out.println("pos: " + pos);
            if(pos!=-1){//editar um item

                Item itemEdit = itens.get(pos);
                itemEdit.setPreco(item.getPreco());
                itemEdit.setQuantidade(itemEdit.getQuantidade()+item.getQuantidade());
                itemEdit.setTotal(itemEdit.getQuantidade()*itemEdit.getPreco());
                
                String precoitem = itemEdit.getPreco()+"";
                String precototal = itemEdit.getTotal() +"";
                
                //atualizar tabela
                jtabelaitens.setValueAt(itemEdit.getQuantidade() + "", pos, 2);
                jtabelaitens.setValueAt("R$" + precoitem.replace(".", ",") + "", pos, 3);
                jtabelaitens.setValueAt("R$" + precototal.replace(".", ",") + "", pos, 4);

                venda.setTotal(venda.getTotal() + item.getTotal());

                item = itemEdit;
            }else{//insersão de um novo item        
                venda.getItens().add(item);
                itens = venda.getItens();
                String linha[] = new String[5];
                linha[0] = item.getProduto().getCodigoBarra()+ "";
                linha[1] = item.getProduto().getDescricao()+ "";
                linha[2] = item.getQuantidade() + "";
                linha[3] = ("R$ " + item.getPreco()).replace(".", ",");
                linha[4] = ("R$ " + item.getTotal()).replace(".", ",");

                ((DefaultTableModel)jtabelaitens.getModel()).addRow(linha);
                venda.setTotal(venda.getTotal() + item.getTotal());
            }

            //verificar se tem estoque disponível e avisar o usuário
            if(item.getQuantidade()>item.getProduto().getEstoqueAtual()){ //este aviso não impede a insersão do item
                JOptionPane.showMessageDialog(null, "Estoque insuficiente para o item adicionado, talvez não seja possível concluir a venda!");
            }

            //venda.setTotal(venda.getTotal() + item.getTotal()); //incrementa o total da venda
            this.totaloriginal = venda.getTotal();
            venda.setVendedor(usuario);
            venda.setData(new Date());
            this.jtotal.setText(("R$ " + venda.getTotal()).replace(".", ","));        
            this.jcodigo.setText("");
            this.jdescricao.setText("");
            this.jquantidade.setText("");
            this.jcodigo.requestFocus();
            produto = new Produto();
        }else{
            JOptionPane.showMessageDialog(null, "Existe apenas "+produto.getEstoqueAtual()+" de '"+produto.getDescricao()+"' em Estoque!");
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField japelido;
    private javax.swing.JButton jbutao_adicionar;
    private javax.swing.JButton jbutao_concluir;
    private javax.swing.JButton jbutao_excluir;
    private javax.swing.JButton jbutao_pesquisar;
    private javax.swing.JButton jbutao_pesquisar_cliente;
    private javax.swing.JButton jbutaosalvar;
    private javax.swing.JTextField jcliente;
    private javax.swing.JTextField jcodigo;
    private javax.swing.JTextField jcodigocliente;
    private javax.swing.JTextField jdata;
    private javax.swing.JTextField jdesconto;
    private javax.swing.JTextField jdescricao;
    private javax.swing.JTextField jquantidade;
    private javax.swing.JRadioButton jradiodin;
    private javax.swing.JRadioButton jradiopor;
    private javax.swing.JTable jtabelaitens;
    private javax.swing.JTextField jtotal;
    private javax.swing.JTextField jvendedor;
    // End of variables declaration//GEN-END:variables

    private Item bindItem() throws Exception {
        Item res = new Item();
        if(produto.getCodigo() == 0){
            throw new Exception("Selecione um produto");
        }
        try{
            res.setProduto(produto);
            res.setQuantidade(Integer.parseInt(jquantidade.getText()));
            res.setPreco(produto.getPrecoVenda());
            res.setTotal(produto.getPrecoVenda()*res.getQuantidade());
            res.setVenda(venda);
        }catch(Exception ex){
            throw new Exception("Quantidade inválida");
        }
        
        
        return res;
    }
    
    
    private void mostrarItemTabela(Item item) {
     
        //Adicionando na tabela
        DefaultTableModel model = (DefaultTableModel) jtabelaitens.getModel();
        String[] linha = new String[5];
        linha[0] = item.getProduto().getCodigoBarra()+ "";
        linha[1] = item.getProduto().getDescricao();
        linha[2] = item.getQuantidade() + "";
        linha[3] = "R$ " + item.getPreco();
        linha[4] = item.getTotal() + "";
        model.addRow(linha);
        

        jtotal.setText("R$ " + venda.getTotal());
        jcodigo.setText("");
        jdescricao.setText("");
        jcodigo.requestFocus();
        jquantidade.setText("");

            
    }
    
    private int buscarItemSimilar(Item item){
        int res = -1;
        int i;
        Item itemAux;
        for(i=0;i<itens.size();i++){
            itemAux = itens.get(i);
            
            if(itemAux.getProduto().getCodigo() == item.getProduto().getCodigo()){ //produtos iguais
                res = i;
                break;
            }
        }     
        
        return res;
    }

    private void descontar(){
        double total = this.totaloriginal;
        if(jradiopor.isSelected()){
            double por = Double.parseDouble(jdesconto.getText());
            double desconto = this.calcularPorcentagem(total, por);
            this.venda.setTotal(total  - desconto);
        }else{
            double desconto = Double.parseDouble(jdesconto.getText());
            this.venda.setTotal(total  - desconto);
        }
        jtotal.setText("R$ "+this.venda.getTotal());
    }
    
    private double calcularPorcentagem(double total, double por){
        double x = (por * total) / 100;
        return x;
    }
    
}


