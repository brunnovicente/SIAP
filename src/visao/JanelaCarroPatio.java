/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.FachadaControle;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import persistencia.entidades.Cliente;
import persistencia.entidades.Conserto;
import persistencia.entidades.Item;
import persistencia.entidades.Produto;
import persistencia.entidades.Usuario;
import persistencia.entidades.Veiculo;
import persistencia.entidades.Venda;

/**
 *
 * @author Bruno
 */
public class JanelaCarroPatio extends javax.swing.JDialog {

    private List<Item> itens;
    private Usuario usuario;
    private TelaPrincipal pai;
    private Produto produto;
    private Cliente cliente = null;
    private Veiculo veiculo = null;
    private Conserto conserto = null;
    private Venda venda = null;
    
    /**
     * Creates new form JanelaVenda
     */
    public JanelaCarroPatio(java.awt.Frame parent, boolean modal, Usuario usuario) throws Exception {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        this.setLocationRelativeTo(null);
        jcodigo.requestFocus();
        this.pai = (TelaPrincipal) parent;
        this.itens = new ArrayList<Item>();
        jvendedor.setText(this.usuario.getNome());

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        jdata.setText(sdf.format(new Date()));

        venda = new Venda();
        //venda.setStatus(Venda.PATIO);
        venda.setVendedor(usuario);
        venda.setData(new Date());
        
        
        jtotal.setText("R$ 0,00");
        produto = new Produto();
        cliente = new Cliente();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        
    }

    JanelaCarroPatio(Frame parent, boolean modal, Usuario usuario, Conserto conserto) throws Exception {
        super(parent, modal);
        initComponents();
        
        this.jButton6.setEnabled(false); // cliente não pode ser alterado
        
        this.conserto = conserto;
        this.usuario = usuario;
        this.setLocationRelativeTo(null);
        jcodigo.requestFocus();
        this.pai = (TelaPrincipal) parent;
        this.itens = conserto.getVenda().getItens();
        jvendedor.setText(this.usuario.getNome());
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        jdata.setText(sdf.format(new Date()));

        venda = conserto.getVenda();
        
        jtotal.setText("R$ "+ venda.getTotal());
        produto = new Produto();
        cliente = conserto.getVenda().getCliente();
        
        jcodigoCliente.setText(cliente.getCodigo()+"");
        jnomeCliente.setText(cliente.getNome());
        jplaca.setText(conserto.getVeiculo().getPlaca());
        jmodelo.setText(conserto.getVeiculo().getModelo());
        
        this.veiculo = conserto.getVeiculo();
        
        //preencher itens
        
        
       double totalmarcados = 0;
        for(Item item: conserto.getVenda().getItens()){
            
            this.mostrarItemTabela(item);
            
            if(item.getStatus().equals(Item.STATUS_UTILIZADO)){
                totalmarcados += item.getTotal();
            }
        }
        jtotalmarcados.setText("R$ "+totalmarcados);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.setTitle("CARRO NO PÁTIO: "+this.venda.getCliente().getApelido());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jdescricao = new javax.swing.JTextField();
        jcodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jquantidade = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabelaitens = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jvendedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jdata = new javax.swing.JTextField();
        jtotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtotalmarcados = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jcodigoCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jnomeCliente = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jplaca = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jmodelo = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CARRO NO PÁTIO");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Venda"));

        jdescricao.setEditable(false);
        jdescricao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jdescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdescricaoActionPerformed(evt);
            }
        });
        jdescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdescricaoFocusGained(evt);
            }
        });
        jdescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdescricaoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdescricaoKeyReleased(evt);
            }
        });

        jcodigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jcodigo.setToolTipText("");
        jcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcodigoKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("CÓDIGO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("DESCRIÇÃO DO PRODUTO");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisa.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("QUANTIDADE");

        jquantidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jquantidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jquantidadeMouseClicked(evt);
            }
        });
        jquantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jquantidadeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jcodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jButton2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens da Venda"));

        jtabelaitens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtabelaitens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Quantidade", "Preço Unitário", "Preço Total", "Utilizado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtabelaitens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtabelaitensKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtabelaitens);
        if (jtabelaitens.getColumnModel().getColumnCount() > 0) {
            jtabelaitens.getColumnModel().getColumn(0).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(1).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(1).setPreferredWidth(300);
            jtabelaitens.getColumnModel().getColumn(2).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(2).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(3).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(3).setPreferredWidth(30);
            jtabelaitens.getColumnModel().getColumn(4).setResizable(false);
            jtabelaitens.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Venda"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Vendedor");

        jvendedor.setEditable(false);
        jvendedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Data da Venda");

        jdata.setEditable(false);
        jdata.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jtotal.setEditable(false);
        jtotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtotal.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("TOTAL DA VENDA:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("TOTAL MARCADOS");

        jtotalmarcados.setEditable(false);
        jtotalmarcados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtotalmarcados.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jdata, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(203, 203, 203)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(293, 293, 293)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtotal)
                    .addComponent(jtotalmarcados))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12)
                    .addComponent(jtotalmarcados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ok.png"))); // NOI18N
        jButton3.setText("Concluir - F5");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Lixeira2.png"))); // NOI18N
        jButton4.setText("EXCLUIR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Cliente"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("CÓDIGO");

        jcodigoCliente.setEditable(false);
        jcodigoCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcodigoClienteActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("NOME DO CLIENTE");

        jnomeCliente.setEditable(false);
        jnomeCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("PLACA");

        jplaca.setEditable(false);
        jplaca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("MODELO");

        jmodelo.setEditable(false);
        jmodelo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisa2.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jnomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jplaca, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jplaca)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jcodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jnomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Salvar.png"))); // NOI18N
        jButton7.setText("Salvar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.buscarProduto();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jdescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescricaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jquantidade.requestFocus();
            //teste.selectAll();
            jquantidade.selectAll();
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaCarroPatio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jdescricaoKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.insersaoItem();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.concluirvenda();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jdescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdescricaoActionPerformed

    }//GEN-LAST:event_jdescricaoActionPerformed

    private void jdescricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdescricaoFocusGained
    }//GEN-LAST:event_jdescricaoFocusGained

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_formKeyPressed

    private void jtabelaitensKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtabelaitensKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            
            jtotal.setText(this.venda.getTotal() + "");
        }
    }//GEN-LAST:event_jtabelaitensKeyPressed

    private void jquantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jquantidadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.insersaoItem();
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaCarroPatio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jquantidadeKeyPressed

    private void jquantidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jquantidadeMouseClicked
        jquantidade.setText("1");
    }//GEN-LAST:event_jquantidadeMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.removerItem();
        jtotal.setText(venda.getTotal() + "");
        this.calcularNaoMarcados();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jdescricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescricaoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jdescricaoKeyReleased

    private void jcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcodigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.buscaProdutoPorCodigo();
            
            jquantidade.requestFocus();
            //teste.selectAll();
            jquantidade.selectAll();
            
        } else if (evt.getKeyCode() == KeyEvent.VK_F3) {
            this.buscarProduto();
        }if(evt.getKeyCode() == KeyEvent.VK_F2){
            this.buscarCliente();
        } 
         if (evt.getKeyCode() == KeyEvent.VK_F5) {
            try {
                this.finalizarvenda();
            } catch (ParseException ex) {
                Logger.getLogger(JanelaCarroPatio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jtabelaitens.requestFocus();
        }
    }//GEN-LAST:event_jcodigoKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
            this.buscarCliente();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(!jcodigoCliente.getText().isEmpty()){
            this.salvar();
            this.calcularNaoMarcados();
            JOptionPane.showMessageDialog(null, "Orçamento salvo para este veículo no pátio");
        }else{
            JOptionPane.showMessageDialog(null, "Não é possível salvar orçamento sem um Cliente!");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jcodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcodigoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcodigoClienteActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.fechar();
    }//GEN-LAST:event_formWindowClosing
    
    private void calcularNaoMarcados(){
        double marcados = 0;
        for (Item item : itens) {
            if(item.getStatus().equals(Item.STATUS_UTILIZADO)){
                marcados += item.getTotal();
            }
        }
        jtotalmarcados.setText("R$ "+marcados);
    }//Fim do calcular
    
    private boolean temNaoMarcados(){
        for (Item item : this.venda.getItens()) {
            if(item.getStatus().equals(Item.STATUS_NAOUTILIZADO)){
                return true;
            }
        }
        return false;
    }//Fim do não marcados
    
    
    private void salvar(){
        boolean todos = true;
        String texto = "Os seguintes produtos estão em falta no estoque e não ser confirmados: \n";
        try {
         
            venda.setCliente(this.cliente);
            int i;
            for(i=0;i<venda.getItens().size();i++){
                Item item = venda.getItens().get(i);
                Boolean marcador_tabela = (Boolean) jtabelaitens.getModel().getValueAt(i, 5);
                Boolean marcador_objeto = item.getStatus().equals(Item.STATUS_UTILIZADO);
                if(marcador_tabela && !marcador_objeto){
                    if(item.getProduto().getEstoqueAtual() >= item.getQuantidade()){
                        item.setStatus(Item.STATUS_UTILIZADO);
                        item.getProduto().setEstoqueAtual(item.getProduto().getEstoqueAtual() - item.getQuantidade());
                        //item.setQuantidade(0);
                        FachadaControle.getFachadaControle().editarProduto(item.getProduto());
                    }else{
                        todos = false;
                        texto += ""+item.getProduto().getDescricao()+" - Estoque: "+item.getProduto().getEstoqueAtual();
                    }
                }else{
                    if(!marcador_tabela && marcador_objeto){
                        item.setStatus(Item.STATUS_NAOUTILIZADO);
                        item.getProduto().setEstoqueAtual(item.getProduto().getEstoqueAtual() + item.getQuantidade());
                        FachadaControle.getFachadaControle().editarProduto(item.getProduto());
                    }
                }                
            }    
            
            //this.venda.setStatus(Venda.PATIO);
            FachadaControle.getFachadaControle().salvarCarroPatio(venda);
            this.venda = FachadaControle.getFachadaControle().getVenda(this.venda.getCodigo());
            if(this.conserto==null) this.conserto = new Conserto();
            conserto.setCliente(this.cliente);
            conserto.setVeiculo(this.veiculo);
            conserto.setVenda(venda);
            conserto.setData(new Date());            
            FachadaControle.getFachadaControle().salvarConserto(conserto);
            
            this.setTitle("CARRO NO PÁTIO: "+this.venda.getCliente().getApelido());
            if(!todos){
                JOptionPane.showMessageDialog(null, texto);
            }
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Orçamento não pode ser salvo");
        }
    }//Fim do Salvar
    
    private void fechar(){
        this.salvar();
        this.dispose();
    }
    
    private void buscarCliente(){
        JanelaConsultaClientes janelaconsulta = new JanelaConsultaClientes(pai, true,cliente);
            janelaconsulta.setVisible(true);
            
            jcodigoCliente.setText(cliente.getCodigo()+"");
            jnomeCliente.setText(cliente.getNome());
            jplaca.setText(cliente.getVeiculos().get(0).getPlaca());
            jmodelo.setText(cliente.getVeiculos().get(0).getModelo());
            this.veiculo = cliente.getVeiculos().get(0);
            
            jcodigo.requestFocus();
    }
    

    private void buscarProduto() {
        produto = new Produto();
        JanelaConsultaProdutos janelaconsulta = new JanelaConsultaProdutos(this.pai, true, produto);
        janelaconsulta.setVisible(true);
        if (produto.getCodigo() != 0) {
            jdescricao.setText(produto.getDescricao());
            jcodigo.setText(produto.getCodigoBarra());
            jquantidade.setText("1");
            jquantidade.requestFocus();
            jquantidade.select(0, jquantidade.getText().length());

        }
    }
    
    private void buscaProdutoPorCodigo(){
        //Produto produto = new Produto();
        try {
            produto = FachadaControle.getFachadaControle().buscaProdutoBarra(jcodigo.getText());
            jdescricao.setText(produto.getDescricao());
            //System.out.println("Nome na tela: "+produto.getDescricao());
            //JOptionPane.showMessageDialog(null, this);
            //jcodigo.setText(produto.getCodigo() + "");
            jquantidade.setText("1");
            jquantidade.requestFocus();
            jquantidade.select(0, jquantidade.getText().length());
            
        } catch (SQLException ex) {
            Logger.getLogger(JanelaCarroPatio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void finalizarvenda() throws ParseException {

        
        DateFormat df = new SimpleDateFormat("dd/mm/yyyy");
        Date d = df.parse(jdata.getText());

        this.venda.setData(d);
        this.venda.setVendedor(usuario);
        this.venda.setCliente(this.cliente);

        JanelaConfirmacao confirma = new JanelaConfirmacao(pai, true, venda);
        confirma.setVisible(true);

        this.dispose();

        
    }
    
    public void concluirvenda(){
        try {
            this.salvar();
            if(!this.temNaoMarcados()){
                venda.setCliente(this.cliente);
                int i;
                for(i=0;i<venda.getItens().size();i++){
                    Item item = venda.getItens().get(i);
                    Object marcador = jtabelaitens.getModel().getValueAt(i, 5);
                    if((Boolean)marcador){
                        item.setStatus(Item.STATUS_UTILIZADO);
                    }else{
                        item.setStatus(Item.STATUS_NAOUTILIZADO);
                    }                
                }
                this.finalizarvenda();  
                if(this.conserto==null) this.conserto = new Conserto();
                conserto.setCliente(this.cliente);
                conserto.setVeiculo(this.veiculo);
                conserto.setVenda(venda);
                conserto.setData(new Date());            
                FachadaControle.getFachadaControle().salvarConserto(conserto);            
            }else{
                JOptionPane.showMessageDialog(null, "Não é possível concluir a venda com itens não marcados!");
            }
        } catch (ParseException ex) {
            Logger.getLogger(JanelaCarroPatio.class.getName()).log(Level.SEVERE, null, ex);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Venda não pode ser salva");
        }
    }

    private void ClearTabela(JTable jtabela) {
        DefaultTableModel model = (DefaultTableModel) jtabela.getModel();;
        int tam = model.getRowCount();
        for (int i = 0; i < tam; i++) {
            model.removeRow(0);
        }
    }
    
    
    private void removerItem() {
        int valor = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o item?", "EXCLUSÃO", JOptionPane.YES_NO_OPTION);
        if(valor == JOptionPane.YES_OPTION){
            int pos = jtabelaitens.getSelectedRow();

            Item itemRemove = venda.getItens().remove(pos);
            venda.setTotal(venda.getTotal() - itemRemove.getTotal());


            DefaultTableModel model = (DefaultTableModel) jtabelaitens.getModel();
            model.removeRow(pos);
            jtabelaitens.setModel(model);
            jtotal.setText("R$ " +venda.getTotal());
        }
    }
    
    private void insersaoItem(){
        Item item = null;
        try {
            //gerar o item a ser inserido
            item = bindItem();
        } catch (Exception ex) {
            Logger.getLogger(JanelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return;
        }
        
        int pos = buscarItemSimilar(item);
        if(pos!=-1){//editar um item
            
            Item itemEdit = itens.get(pos);
            itemEdit.setPreco(item.getPreco());
            itemEdit.setQuantidade(itemEdit.getQuantidade()+item.getQuantidade());
            itemEdit.setTotal(itemEdit.getQuantidade()*item.getPreco());
            
            //atualizar tabela
            jtabelaitens.setValueAt(itemEdit.getQuantidade() + "", pos, 2);
            jtabelaitens.setValueAt(itemEdit.getPreco() + "", pos, 3);
            jtabelaitens.setValueAt(itemEdit.getTotal() + "", pos, 4);
            
            venda.setTotal(venda.getTotal() + (item.getTotal()*item.getQuantidade()));
            
            item = itemEdit;
        }else{//insersão de um novo item        
            venda.getItens().add(item);
            itens = venda.getItens();
            String linha[] = new String[5];
            linha[0] = item.getProduto().getCodigoBarra()+ "";
            linha[1] = item.getProduto().getDescricao()+ "";
            linha[2] = item.getQuantidade() + "";
            linha[3] = "R$ " + item.getPreco();
            linha[4] = "R$ " + item.getTotal();
            ((DefaultTableModel)jtabelaitens.getModel()).addRow(linha);
            jtabelaitens.setValueAt(false, jtabelaitens.getRowCount()-1, 5);
            venda.setTotal(venda.getTotal() + item.getTotal());
        }
        
        //verificar se tem estoque disponível e avisar o usuário
        if(item.getQuantidade()>item.getProduto().getEstoqueAtual()){ //este aviso não impede a insersão do item
            JOptionPane.showMessageDialog(null, "Estoque insuficiente para o item adicionado, talvez não seja possível concluir a venda!");
        }
        
        //venda.setTotal(venda.getTotal() + item.getTotal()); //incrementa o total da venda
        venda.setVendedor(usuario);
        venda.setData(new Date());
        
        jquantidade.setText("");
        jcodigo.setText("");
        jdescricao.setText("");
        jcodigo.requestFocus();
        
        this.jtotal.setText("R$ " + venda.getTotal());        
        produto = new Produto();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jcodigo;
    private javax.swing.JTextField jcodigoCliente;
    private javax.swing.JTextField jdata;
    private javax.swing.JTextField jdescricao;
    private javax.swing.JTextField jmodelo;
    private javax.swing.JTextField jnomeCliente;
    private javax.swing.JTextField jplaca;
    private javax.swing.JTextField jquantidade;
    private javax.swing.JTable jtabelaitens;
    private javax.swing.JTextField jtotal;
    private javax.swing.JTextField jtotalmarcados;
    private javax.swing.JTextField jvendedor;
    // End of variables declaration//GEN-END:variables

    private void mostrarItemTabela(Item item) {
     
        //Adicionando na tabela
        DefaultTableModel model = (DefaultTableModel) jtabelaitens.getModel();
        String[] linha = new String[5];
        linha[0] = item.getProduto().getCodigoBarra()+ "";
        linha[1] = item.getProduto().getDescricao();
        linha[2] = item.getQuantidade() + "";
        linha[3] = "R$ " + item.getPreco();
        linha[4] = item.getTotal() + "";
        model.addRow(linha);
        model.setValueAt((item.getStatus().equals(Item.STATUS_UTILIZADO)), model.getRowCount()-1, model.getColumnCount()-1);

        jtotal.setText("R$ " + venda.getTotal());
        jcodigo.setText("");
        jdescricao.setText("");
        jcodigo.requestFocus();
        jquantidade.setText("");

            
    }
    
    private Item bindItem() throws Exception {
        Item res = new Item();
        if(produto.getCodigo() == 0){
            throw new Exception("Selecione um produto");
        }
        try{
            res.setProduto(produto);
            res.setQuantidade(Integer.parseInt(jquantidade.getText()));
            res.setPreco(produto.getPrecoVenda());
            res.setTotal(produto.getPrecoVenda()*res.getQuantidade());
            res.setVenda(venda);
            res.setStatus(Item.STATUS_NAOUTILIZADO);
        }catch(Exception ex){
            throw new Exception("quantidade inválida");
        }
        
        
        return res;
    }
    
     private int buscarItemSimilar(Item item){
        int res = -1;
        int i;
        Item itemAux;
        for(i=0;i<itens.size();i++){
            itemAux = itens.get(i);
            
            if(itemAux.getProduto().getCodigoBarra().equals(item.getProduto().getCodigoBarra())){ //produtos iguais
                res = i;
                break;
            }
        }     
        
        return res;
    }
}
